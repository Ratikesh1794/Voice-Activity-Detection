{"ast":null,"code":"var _jsxFileName = \"/workspaces/Voice-Activity-Detection/vad-interface/frontend/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const FileUpload = ({ onResults }) => {\n//     const [file, setFile] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(false);\n//     const [success, setSuccess] = useState(null);\n\n//     const handleFileChange = (e) => {\n//         const selectedFile = e.target.files[0];\n//         if (selectedFile && selectedFile.type !== 'audio/mpeg') {\n//             setError(\"Please select a valid MP3 file.\");\n//             return;\n//         }\n//         setFile(selectedFile);\n//         setError(null);\n//         setSuccess(null);\n//     };\n\n//     const handleUpload = async () => {\n//         if (!file) {\n//             setError(\"Please select a file first.\");\n//             return;\n//         }\n\n//         setLoading(true);\n//         setError(null);\n//         setSuccess(null);\n\n//         const formData = new FormData();\n//         formData.append('file', file);\n\n//         try {\n//             const response = await axios.post('http://localhost:5000/upload', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//             setSuccess(\"File uploaded and processed successfully.\");\n//             onResults(response.data.vad_results);\n//         } catch (error) {\n//             const errorMessage = error.response?.data?.error || error.message;\n//             setError(`There was an error uploading the file: ${errorMessage}`);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input \n//                 type=\"file\" \n//                 onChange={handleFileChange} \n//                 accept=\"audio/mp3\"\n//             />\n//             <button onClick={handleUpload} disabled={loading}>\n//                 {loading ? \"Uploading...\" : \"Upload\"}\n//             </button>\n//             {success && <p style={{ color: 'green' }}>{success}</p>}\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//         </div>\n//     );\n// };\n\n// export default FileUpload;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an MP3\n      if (file.type === 'audio/mpeg' || file.type === 'audio/mp3') {\n        setSelectedFile(file);\n        setError(null);\n      } else {\n        setError('Please upload an MP3 file.');\n        setSelectedFile(null);\n      }\n    }\n  };\n  const handleFileUpload = async () => {\n    if (selectedFile) {\n      // Create a FormData object to send the file\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      try {\n        // Replace this URL with your server endpoint\n        const response = await fetch('/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          alert('File uploaded successfully!');\n        } else {\n          alert('File upload failed.');\n        }\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        alert('An error occurred during file upload.');\n      }\n    } else {\n      alert('No file selected.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".mp3\",\n      onChange: handleFileChange,\n      className: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      className: \"upload-button\",\n      children: \"Upload MP3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"67m91kt2Gbg3Ki8ye1gTMRzYWN0=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","error","setError","handleFileChange","event","file","target","files","type","handleFileUpload","formData","FormData","append","response","fetch","method","body","ok","alert","console","className","children","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Voice-Activity-Detection/vad-interface/frontend/src/components/FileUpload.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const FileUpload = ({ onResults }) => {\n//     const [file, setFile] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(false);\n//     const [success, setSuccess] = useState(null);\n\n//     const handleFileChange = (e) => {\n//         const selectedFile = e.target.files[0];\n//         if (selectedFile && selectedFile.type !== 'audio/mpeg') {\n//             setError(\"Please select a valid MP3 file.\");\n//             return;\n//         }\n//         setFile(selectedFile);\n//         setError(null);\n//         setSuccess(null);\n//     };\n\n//     const handleUpload = async () => {\n//         if (!file) {\n//             setError(\"Please select a file first.\");\n//             return;\n//         }\n\n//         setLoading(true);\n//         setError(null);\n//         setSuccess(null);\n\n//         const formData = new FormData();\n//         formData.append('file', file);\n\n//         try {\n//             const response = await axios.post('http://localhost:5000/upload', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//             setSuccess(\"File uploaded and processed successfully.\");\n//             onResults(response.data.vad_results);\n//         } catch (error) {\n//             const errorMessage = error.response?.data?.error || error.message;\n//             setError(`There was an error uploading the file: ${errorMessage}`);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input \n//                 type=\"file\" \n//                 onChange={handleFileChange} \n//                 accept=\"audio/mp3\"\n//             />\n//             <button onClick={handleUpload} disabled={loading}>\n//                 {loading ? \"Uploading...\" : \"Upload\"}\n//             </button>\n//             {success && <p style={{ color: 'green' }}>{success}</p>}\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//         </div>\n//     );\n// };\n\n// export default FileUpload;\n\nimport React, { useState } from 'react';\n\nconst FileUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an MP3\n      if (file.type === 'audio/mpeg' || file.type === 'audio/mp3') {\n        setSelectedFile(file);\n        setError(null);\n      } else {\n        setError('Please upload an MP3 file.');\n        setSelectedFile(null);\n      }\n    }\n  };\n\n  const handleFileUpload = async () => {\n    if (selectedFile) {\n      // Create a FormData object to send the file\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      try {\n        // Replace this URL with your server endpoint\n        const response = await fetch('/upload', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (response.ok) {\n          alert('File uploaded successfully!');\n        } else {\n          alert('File upload failed.');\n        }\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        alert('An error occurred during file upload.');\n      }\n    } else {\n      alert('No file selected.');\n    }\n  };\n\n  return (\n    <div className=\"file-upload-container\">\n      <input\n        type=\"file\"\n        accept=\".mp3\"\n        onChange={handleFileChange}\n        className=\"file-input\"\n      />\n      {error && <p className=\"error-message\">{error}</p>}\n      <button onClick={handleFileUpload} className=\"upload-button\">\n        Upload MP3\n      </button>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}