{"ast":null,"code":"var _jsxFileName = \"/workspaces/Voice-Activity-Detection/vad-interface/frontend/src/components/VadResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { Waveform } from 'wavesurfer-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VadResults = ({\n  timestamps\n}) => {\n  _s();\n  const waveformRef = useRef(null);\n  const waveSurferRef = useRef(null);\n  useEffect(() => {\n    if (waveformRef.current && !waveSurferRef.current) {\n      waveSurferRef.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: '#d9dcff',\n        progressColor: '#4353ff',\n        backend: 'MediaElement',\n        barWidth: 2,\n        cursorWidth: 1,\n        height: 200,\n        responsive: true\n      });\n\n      // Load the audio file into WaveSurfer\n      waveSurferRef.current.load('/path-to-your-uploaded-file.mp3');\n\n      // Highlight speech segments\n      timestamps.forEach(({\n        start,\n        end\n      }) => {\n        waveSurferRef.current.addRegion({\n          start: start / 1000,\n          // convert ms to seconds\n          end: end / 1000,\n          // convert ms to seconds\n          color: 'rgba(0, 123, 255, 0.4)' // Highlight color\n        });\n      });\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (waveSurferRef.current) {\n        waveSurferRef.current.destroy();\n      }\n    };\n  }, [timestamps]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waveform Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: waveformRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(VadResults, \"qbZ/hiikezczgE9PHw60DWzFn1I=\");\n_c = VadResults;\nexport default VadResults;\nvar _c;\n$RefreshReg$(_c, \"VadResults\");","map":{"version":3,"names":["React","useEffect","useRef","WaveSurfer","Waveform","jsxDEV","_jsxDEV","VadResults","timestamps","_s","waveformRef","waveSurferRef","current","create","container","waveColor","progressColor","backend","barWidth","cursorWidth","height","responsive","load","forEach","start","end","addRegion","color","destroy","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/workspaces/Voice-Activity-Detection/vad-interface/frontend/src/components/VadResults.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { Waveform } from 'wavesurfer-react';\n\nconst VadResults = ({ timestamps }) => {\n    const waveformRef = useRef(null);\n    const waveSurferRef = useRef(null);\n\n    useEffect(() => {\n        if (waveformRef.current && !waveSurferRef.current) {\n            waveSurferRef.current = WaveSurfer.create({\n                container: waveformRef.current,\n                waveColor: '#d9dcff',\n                progressColor: '#4353ff',\n                backend: 'MediaElement',\n                barWidth: 2,\n                cursorWidth: 1,\n                height: 200,\n                responsive: true,\n            });\n\n            // Load the audio file into WaveSurfer\n            waveSurferRef.current.load('/path-to-your-uploaded-file.mp3');\n\n            // Highlight speech segments\n            timestamps.forEach(({ start, end }) => {\n                waveSurferRef.current.addRegion({\n                    start: start / 1000, // convert ms to seconds\n                    end: end / 1000, // convert ms to seconds\n                    color: 'rgba(0, 123, 255, 0.4)', // Highlight color\n                });\n            });\n        }\n\n        // Cleanup on unmount\n        return () => {\n            if (waveSurferRef.current) {\n                waveSurferRef.current.destroy();\n            }\n        };\n    }, [timestamps]);\n\n    return (\n        <div>\n            <h2>Waveform Visualization</h2>\n            <div ref={waveformRef} />\n        </div>\n    );\n};\n\nexport default VadResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMS,aAAa,GAAGT,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,IAAIS,WAAW,CAACE,OAAO,IAAI,CAACD,aAAa,CAACC,OAAO,EAAE;MAC/CD,aAAa,CAACC,OAAO,GAAGT,UAAU,CAACU,MAAM,CAAC;QACtCC,SAAS,EAAEJ,WAAW,CAACE,OAAO;QAC9BG,SAAS,EAAE,SAAS;QACpBC,aAAa,EAAE,SAAS;QACxBC,OAAO,EAAE,cAAc;QACvBC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,CAAC;QACdC,MAAM,EAAE,GAAG;QACXC,UAAU,EAAE;MAChB,CAAC,CAAC;;MAEF;MACAV,aAAa,CAACC,OAAO,CAACU,IAAI,CAAC,iCAAiC,CAAC;;MAE7D;MACAd,UAAU,CAACe,OAAO,CAAC,CAAC;QAAEC,KAAK;QAAEC;MAAI,CAAC,KAAK;QACnCd,aAAa,CAACC,OAAO,CAACc,SAAS,CAAC;UAC5BF,KAAK,EAAEA,KAAK,GAAG,IAAI;UAAE;UACrBC,GAAG,EAAEA,GAAG,GAAG,IAAI;UAAE;UACjBE,KAAK,EAAE,wBAAwB,CAAE;QACrC,CAAC,CAAC;MACN,CAAC,CAAC;IACN;;IAEA;IACA,OAAO,MAAM;MACT,IAAIhB,aAAa,CAACC,OAAO,EAAE;QACvBD,aAAa,CAACC,OAAO,CAACgB,OAAO,CAAC,CAAC;MACnC;IACJ,CAAC;EACL,CAAC,EAAE,CAACpB,UAAU,CAAC,CAAC;EAEhB,oBACIF,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B3B,OAAA;MAAK4B,GAAG,EAAExB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAACxB,EAAA,CA5CIF,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}