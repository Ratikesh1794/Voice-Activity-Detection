{"ast":null,"code":"var _jsxFileName = \"/workspaces/Voice-Activity-Detection/vad-interface/frontend/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onResults\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setError(null); // Clear any previous errors\n    setSuccess(null); // Clear previous success messages\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select a file first.\");\n      return;\n    }\n    setLoading(true);\n    setError(null); // Clear any previous errors\n    setSuccess(null); // Clear previous success messages\n\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSuccess(\"File uploaded and processed successfully.\");\n      onResults(response.data.vad_results);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Check if error response exists\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message;\n      setError(`There was an error uploading the file: ${errorMessage}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"audio/*\" // Limit file type to audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"r73r0T3LW6T1OZBw3fdiRfcgI4Q=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","onResults","_s","file","setFile","error","setError","loading","setLoading","success","setSuccess","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","headers","data","vad_results","_error$response","_error$response$data","errorMessage","message","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","_c","$RefreshReg$"],"sources":["/workspaces/Voice-Activity-Detection/vad-interface/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst FileUpload = ({ onResults }) => {\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [success, setSuccess] = useState(null);\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n        setError(null);  // Clear any previous errors\n        setSuccess(null); // Clear previous success messages\n    };\n\n    const handleUpload = async () => {\n        if (!file) {\n            setError(\"Please select a file first.\");\n            return;\n        }\n\n        setLoading(true);\n        setError(null); // Clear any previous errors\n        setSuccess(null); // Clear previous success messages\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const response = await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setSuccess(\"File uploaded and processed successfully.\");\n            onResults(response.data.vad_results);\n        } catch (error) {\n            // Check if error response exists\n            const errorMessage = error.response?.data?.error || error.message;\n            setError(`There was an error uploading the file: ${errorMessage}`);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <input \n                type=\"file\" \n                onChange={handleFileChange} \n                accept=\"audio/*\" // Limit file type to audio\n            />\n            <button onClick={handleUpload} disabled={loading}>\n                {loading ? \"Uploading...\" : \"Upload\"}\n            </button>\n            {success && <p style={{ color: 'green' }}>{success}</p>}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n    );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}